/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convexhull;

import java.awt.geom.Point2D;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author jethro
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawPanel1 = new convexhull.drawPanel();
        pointsButton = new javax.swing.JButton();
        jarvisButton = new javax.swing.JButton();
        pointCountField = new javax.swing.JTextField();
        Graham = new javax.swing.JButton();
        genertbut = new javax.swing.JButton();
        CB = new javax.swing.JComboBox<>();
        a = new javax.swing.JTextField();
        b = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bLabel = new javax.swing.JLabel();
        QuickHall = new javax.swing.JButton();
        rec = new javax.swing.JButton();
        line = new javax.swing.JButton();
        time = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout drawPanel1Layout = new javax.swing.GroupLayout(drawPanel1);
        drawPanel1.setLayout(drawPanel1Layout);
        drawPanel1Layout.setHorizontalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );
        drawPanel1Layout.setVerticalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pointsButton.setText("Points");
        pointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointsButtonActionPerformed(evt);
            }
        });

        jarvisButton.setText("Jarvis");
        jarvisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jarvisButtonActionPerformed(evt);
            }
        });

        pointCountField.setText("10");

        Graham.setText("Graham");
        Graham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrahamActionPerformed(evt);
            }
        });

        genertbut.setText("Generate ");
        genertbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genertbutActionPerformed(evt);
            }
        });

        CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rectangle", "Square", "Circle", "Ellipse", "Cross", "Triangle" }));
        CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBActionPerformed(evt);
            }
        });

        a.setText("20");

        b.setText("50");

        jLabel1.setText("Extent of sets of points in percentage");

        jLabel2.setText("a = ");

        bLabel.setText("b =");

        QuickHall.setText("quickHall");
        QuickHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuickHallActionPerformed(evt);
            }
        });

        rec.setText("Min Rectangle");
        rec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recActionPerformed(evt);
            }
        });

        line.setText("SweepLine");
        line.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineActionPerformed(evt);
            }
        });

        time.setText("Time");
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pointsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jarvisButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Graham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genertbut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pointCountField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuickHall, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pointCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pointsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jarvisButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Graham, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CB, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(bLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(genertbut, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rec, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(QuickHall, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsButtonActionPerformed
        int npoints = Integer.parseInt(pointCountField.getText());
        
        Point2D [] points = new Point2D[npoints];
        Random rnd = new Random();
        for (int i = 0;i<npoints;i++){
            points[i] = new Point2D.Double(rnd.nextDouble(),rnd.nextDouble());
        }
        drawPanel1.point = points;
        drawPanel1.repaint();
    }//GEN-LAST:event_pointsButtonActionPerformed

    private void jarvisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jarvisButtonActionPerformed
     drawPanel1.poly = Algorithms.jarvisScan(drawPanel1.point,this.drawPanel1);
     drawPanel1.repaint();
    }//GEN-LAST:event_jarvisButtonActionPerformed

    private void GrahamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrahamActionPerformed
        drawPanel1.poly = Algorithms.grahamScan(drawPanel1.point);
        drawPanel1.repaint();
    }//GEN-LAST:event_GrahamActionPerformed

    private void genertbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genertbutActionPerformed
        int npoints = Integer.parseInt(pointCountField.getText());
        double a = Double.parseDouble(this.a.getText());
        double b = Double.parseDouble(this.b.getText());
        String s = (String) CB.getSelectedItem();
        a = a/100;
        b = b/100;
        drawPanel1.point = Algorithms.generateSet(npoints,a,b,s);
        drawPanel1.repaint();
    }//GEN-LAST:event_genertbutActionPerformed

    private void CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBActionPerformed
        String s = (String) CB.getSelectedItem();
        // if shape which does not need second measurement is chosen
        if ("Circle".equals(s) || "Ellipse".equals(s) || "Square".equals(s)){
            // hide text field and label
            b.setVisible(false);
            bLabel.setVisible(false);
        }
        else {
            b.setVisible(true);
            bLabel.setVisible(true);
        }
    }//GEN-LAST:event_CBActionPerformed

    private void QuickHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuickHallActionPerformed
        drawPanel1.poly = Algorithms.quickHull(drawPanel1.point);
        drawPanel1.repaint();
    }//GEN-LAST:event_QuickHallActionPerformed

    private void recActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recActionPerformed
        drawPanel1.poly = Algorithms.jarvisScan(drawPanel1.point,this.drawPanel1);
        drawPanel1.rec = Algorithms.minimumAreaEnclosingBox(drawPanel1.recpt);
        drawPanel1.repaint();
    }//GEN-LAST:event_recActionPerformed

    private void lineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineActionPerformed
        drawPanel1.poly = Algorithms.sweepHull(drawPanel1.point);
        drawPanel1.repaint();
    }//GEN-LAST:event_lineActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        final int gridfrom = 10;
        final int gridto = 1000;
        
        final int sizefrom = 10;
        final int sizeto = 1_000_000;
        System.out.println("Grid");
        for (int size = gridfrom; size < gridto; size+=10){
            Point2D [] grid = generateGrid(size);
            benchMark(grid);
        }
        System.out.println("Random");
        for(int size = sizefrom; size < sizeto; size *=1.1){
            Point2D [] grid = generateRandom(size);
            benchMark(grid);
        }
        System.out.println("Circle");
        for(int size = sizefrom; size < sizeto; size *=1.1){
            Point2D [] grid = generateCircle(size);
            benchMark(grid);
        }
    }//GEN-LAST:event_timeActionPerformed

    private Point2D [] generateRandom(int size){
        int npoints = Integer.parseInt(pointCountField.getText());
        
        Point2D [] points = new Point2D[npoints];
        Random rnd = new Random();
        for (int i = 0;i<npoints;i++){
            points[i] = new Point2D.Double(rnd.nextDouble(),rnd.nextDouble());
        }
        
        return points;
    }
    
    private Point2D [] generateGrid(int size){
        Point2D [] grid;
        grid = new Point2D.Double[size*size];
        for(int x = 0;x<size;x++){
            for(int y = 0;y<size;y++){
                // x* size + y -> místo [][] vlastně funguje jako odkaz na 
                // matici
                grid[x*size+y] = new Point2D.Double(1.0/size*x,1.0/size*y);
            }
        }
        return grid;
    }
    
    private Point2D [] generateCircle(int size){
        Point2D [] points = new Point2D[size]; 
        Random rnd;
        rnd = new Random();
        for(int i = 0;i<size;i++){
            double rand = rnd.nextDouble()*2*Math.PI;
            double x = Math.cos(rand)/2 + 0.5;
            double y = Math.sin(rand)/2 + 0.5;
            points[i] = new Point2D.Double(x,y);
        }
        
        return points;
    }
    
    private void benchMark(Point2D [] grid){
        long startTime = System.nanoTime();
        Algorithms.jarvisScan(grid,this.drawPanel1);
        long endTime = System.nanoTime();
        long jarvisTime = endTime -startTime;
        
        startTime = System.nanoTime();
        Algorithms.quickHull(grid);
        endTime = System.nanoTime();
        long quickTime = endTime -startTime;
        
        startTime = System.nanoTime();
        Algorithms.sweepHull(grid);
        endTime = System.nanoTime();
        long sweepTime = endTime -startTime;
        
        System.out.format("%d,%d,%d,%d \n",grid.length,jarvisTime/1000,quickTime/1000,sweepTime/1000);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB;
    private javax.swing.JButton Graham;
    private javax.swing.JButton QuickHall;
    private javax.swing.JTextField a;
    private javax.swing.JTextField b;
    private javax.swing.JLabel bLabel;
    private convexhull.drawPanel drawPanel1;
    private javax.swing.JButton genertbut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jarvisButton;
    private javax.swing.JButton line;
    private javax.swing.JTextField pointCountField;
    private javax.swing.JButton pointsButton;
    private javax.swing.JButton rec;
    private javax.swing.JButton time;
    // End of variables declaration//GEN-END:variables
}
